<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>ExtRTC</Name>
  <Description>Interface "GenericTimeDate\ExtRTC" for component GenericTimeDate, generated by Component Wizard</Description>
  <Author>Erich Styger</Author>
  <Version>01.001</Version>
  <FileVersion>2</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>GetTime</Name>
        <Symbol>GetTime</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the time.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>uint8_t</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>time</ParName>
          <ParType>TIMEREC</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to time</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>uint8_t #M#_#C#(TIMEREC *time)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SetTime</Name>
        <Symbol>SetTime</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sets the time.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>uint8_t</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>4</ParamCount>
        <Parameter>
          <ParName>Hour</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Hours (0 - 23)</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Min</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Minutes (0 - 59)</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Sec</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Seconds (0 - 59)</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Sec100</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Hundredths of seconds (0 - 99)</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>uint8_t #M#_#C#(uint8_t Hour, uint8_t Min, uint8_t Sec, uint8_t Sec100)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetDate</Name>
        <Symbol>GetDate</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the time and date from the device.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>uint8_t</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>date</ParName>
          <ParType>DATEREC</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to date</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>uint8_t #M#_#C#(DATEREC *date)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SetDate</Name>
        <Symbol>SetDate</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sets the date.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>uint8_t</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>3</ParamCount>
        <Parameter>
          <ParName>Year</ParName>
          <ParType>uint16_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Year in 2000 format</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Month</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Month number (1..12)</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Day</ParName>
          <ParType>uint8_t</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Day number (1..31)</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>uint8_t #M#_#C#(uint16_t Year, uint8_t Month, uint8_t Day)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <EmptySection_DummyValue/>
  </EventList>
  <Registration>
    <Template>RTC_Maxim</Template>
  </Registration>
  <UserTypes>
    <Type>
      <UsrType>TRecordType</UsrType>
      <Name>TTIME</Name>
      <Hint>Time in binary format</Hint>
      <Generate>yes</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>yes</GenerateHelp>
      <PreparedHint>  typedef struct { /* Time in binary format */\n
    uint8_t hour; /* hours */\n
    uint8_t min; /* minutes */\n
    uint8_t sec; /* seconds */\n
    bool mode; /* clock mode, 0 for 12-hour mode, otherwise 0-24 hour mode */\n
    uint8_t am_pm; /* 0: AM, otherwise PM */\n
  } %'ModuleName'_TTIME;\n
</PreparedHint>
      <RecordItem>
        <ItemName>hour</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>hours</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>min</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>minutes</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>sec</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>seconds</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>mode</ItemName>
        <ItemType>Boolean</ItemType>
        <ItemHint>clock mode, 0 for 12-hour mode, otherwise 0-24 hour mode</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>am_pm</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>0: AM, otherwise PM</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
    </Type>
    <Type>
      <UsrType>TRecordType</UsrType>
      <Name>TDATE</Name>
      <Hint>Date in binary format</Hint>
      <Generate>yes</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>yes</GenerateHelp>
      <PreparedHint>  typedef struct { /* Date in binary format */\n
    uint8_t year; /* year */\n
    uint8_t month; /* month */\n
    uint8_t day; /* day */\n
    uint8_t dayOfWeek; /* Day of week, where 0 is the first day. In the range of 0..6 */\n
  } %'ModuleName'_TDATE;\n
</PreparedHint>
      <RecordItem>
        <ItemName>year</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>year</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>month</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>month</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>day</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>day</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
      <RecordItem>
        <ItemName>dayOfWeek</ItemName>
        <ItemType>uint8_t</ItemType>
        <ItemHint>Day of week, where 0 is the first day. In the range of 0..6</ItemHint>
        <ItemPointer>no</ItemPointer>
      </RecordItem>
    </Type>
    <Type>
      <UsrType>TRetypeType</UsrType>
      <Name>TIMEREC</Name>
      <Hint/>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>  typedef int16_t TIMEREC ;\n
</PreparedHint>
      <Type>16bit signed</Type>
    </Type>
    <Type>
      <UsrType>TRetypeType</UsrType>
      <Name>DATEREC</Name>
      <Hint/>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>  typedef int16_t DATEREC ;\n
</PreparedHint>
      <Type>16bit signed</Type>
    </Type>
    <Type>
      <UsrType>TRetypeType</UsrType>
      <Name>uint8_t</Name>
      <Hint/>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>  typedef byte uint8_t ;\n
</PreparedHint>
      <Type>8bit unsigned</Type>
    </Type>
    <Type>
      <UsrType>TRetypeType</UsrType>
      <Name>uint16_t</Name>
      <Hint/>
      <Generate>no</Generate>
      <Unique>no</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>  typedef word uint16_t ;\n
</PreparedHint>
      <Type>16bit unsigned</Type>
    </Type>
  </UserTypes>
</Interface>
