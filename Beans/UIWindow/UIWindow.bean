<?xml version="1.0" encoding="UTF-8"?>
<Bean>
  <Header>
    <Name>UIWindow</Name>
    <Description>Window Widget</Description>
    <Author>Erich Styger</Author>
    <Version>01.033</Version>
    <Icon>UIWindow</Icon>
    <TypesFiles>PE,UIWindow\UIWindow</TypesFiles>
    <FileVersion>6</FileVersion>
  </Header>
  <Options>
    <Category>CPU External Devices-Display</Category>
    <BW_HelpType>&lt;none&gt;</BW_HelpType>
    <BW_HelpFiles>,"Application Notes",Events,Methods,Properties</BW_HelpFiles>
    <BW_AutoSaveHelp>yes</BW_AutoSaveHelp>
    <BW_AutoSaveDriver>yes</BW_AutoSaveDriver>
    <BW_DetailedHelp>yes</BW_DetailedHelp>
    <BW_NeedTps>yes</BW_NeedTps>
    <BW_NeedUst>13</BW_NeedUst>
    <BW_NeedCns>0</BW_NeedCns>
    <BeanStatus>PROPOSAL</BeanStatus>
    <Copyright>License   :  Open Source (LGPL)\nCopyright : (c) Copyright Erich Styger, 2012, all right reserved.\n\nThis an open source software implemented with Processor Expert.\nThis is a free software and is opened for education, research and commercial developments under license policy of following terms:\n* This is a free software and there is NO WARRANTY.\n* No restriction on use. You can use, modify and redistribute it for personal, non-profit or commercial product UNDER YOUR RESPONSIBILITY.\n* Redistributions of source code must retain the above copyright notice.</Copyright>
    <Shortcut>UIW</Shortcut>
    <DemoDriver>no</DemoDriver>
    <BeanLevel>High</BeanLevel>
  </Options>
  <PropertyList>
    <Property>
      <TCompNameItem>
        <Name>Component name</Name>
        <Symbol>DeviceName</Symbol>
        <Hint>Name of the component.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>true</EditLine>
        <DefaultValue/>
      </TCompNameItem>
    </Property>
    <Property>
      <TGrupItem>
        <Name>Window</Name>
        <Symbol>WindowGroup</Symbol>
        <Hint>Configures the defaults</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description>Configures the widget defaults</Description>
        <Expanded>Yes</Expanded>
        <Children>
          <GrupItem>
            <TEnumItem>
              <Name>Background Color</Name>
              <Symbol>WindowBackgroundColor</Symbol>
              <TypeSpec>typeColor</TypeSpec>
              <Hint>Default background color.</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>true</EditLine>
              <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
              <DefaultIndex>1</DefaultIndex>
              <TextValueIndex>true</TextValueIndex>
              <RuntimeProperty>false</RuntimeProperty>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
            </TEnumItem>
          </GrupItem>
          <GrupItem>
            <TBoolItem>
              <Name>Border</Name>
              <Symbol>WindowHasBorder</Symbol>
              <TypeSpec>typeYesNo</TypeSpec>
              <Hint>Defines if the window has border</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>false</EditLine>
              <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
              <DefaultIndex>1</DefaultIndex>
              <TextValueIndex>false</TextValueIndex>
              <RuntimeProperty>false</RuntimeProperty>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
              <DefaultValue>false</DefaultValue>
              <Popup>false</Popup>
            </TBoolItem>
          </GrupItem>
          <GrupItem>
            <TEnumItem>
              <Name>Border Color</Name>
              <Symbol>WindowBorderColor</Symbol>
              <TypeSpec>typeColor</TypeSpec>
              <Hint>If the window has a border, then this color is used.</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>true</EditLine>
              <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
              <DefaultIndex>0</DefaultIndex>
              <TextValueIndex>true</TextValueIndex>
              <RuntimeProperty>false</RuntimeProperty>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
            </TEnumItem>
          </GrupItem>
          <GrupItem>
            <TBoolItem>
              <Name>Movable</Name>
              <Symbol>movable</Symbol>
              <TypeSpec>typeYesNo</TypeSpec>
              <Hint>Defines if the window is movable.</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>false</EditLine>
              <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
              <DefaultIndex>1</DefaultIndex>
              <TextValueIndex>false</TextValueIndex>
              <RuntimeProperty>false</RuntimeProperty>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
              <DefaultValue>false</DefaultValue>
              <Popup>false</Popup>
            </TBoolItem>
          </GrupItem>
          <GrupItem>
            <TBoolItem>
              <Name>Inside screen</Name>
              <Symbol>insideWindowsOnly</Symbol>
              <TypeSpec>typeYesNo</TypeSpec>
              <Hint>Defines if all window must be inside screen after move, not implemented yet!</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>false</EditLine>
              <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
              <DefaultIndex>0</DefaultIndex>
              <TextValueIndex>false</TextValueIndex>
              <RuntimeProperty>false</RuntimeProperty>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
              <DefaultValue>true</DefaultValue>
              <Popup>false</Popup>
            </TBoolItem>
          </GrupItem>
        </Children>
      </TGrupItem>
    </Property>
    <Property>
      <TGrupItem>
        <Name>System</Name>
        <Symbol>SystemGroup</Symbol>
        <Hint>Interface to shared system modules</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description/>
        <Expanded>Yes</Expanded>
        <Children>
          <GrupItem>
            <TInhrLinkItem>
              <Name>User Interface</Name>
              <Symbol>UI</Symbol>
              <TypeSpec>UIWindow\UI</TypeSpec>
              <Hint>Interface to UserInterface</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>false</EditLine>
              <DefaultValue/>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
              <SortStyle/>
            </TInhrLinkItem>
          </GrupItem>
        </Children>
      </TGrupItem>
    </Property>
  </PropertyList>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>Create</Name>
        <Symbol>Create</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Creates a new window</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>6</ParamCount>
        <Parameter>
          <ParName>parent</ParName>
          <ParType>Element</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to parent element</ParHint>
        </Parameter>
        <Parameter>
          <ParName>window</ParName>
          <ParType>WindowWidget</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to window structure</ParHint>
        </Parameter>
        <Parameter>
          <ParName>x</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>x position</ParHint>
        </Parameter>
        <Parameter>
          <ParName>y</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>y position</ParHint>
        </Parameter>
        <Parameter>
          <ParName>width</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>width of element</ParHint>
        </Parameter>
        <Parameter>
          <ParName>height</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>height of element</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(%'ModuleName'_Element *parent, %'ModuleName'_WindowWidget *window, %'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim width, %'ModuleName'_PixelDim height)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>Paint</Name>
        <Symbol>Paint</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Paints a window with all widgets</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>false</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>element</ParName>
          <ParType>Element</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to element</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(%'ModuleName'_Element *element)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>WindowSetBorder</Name>
        <Symbol>WindowSetBorder</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Configures the window to have a border around it</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>window</ParName>
          <ParType>WindowWidget</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to window</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_WindowWidget *window)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>MakeWindowMovable</Name>
        <Symbol>MakeWindowMovable</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Makes a window movable, this window must have a header</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>window</ParName>
          <ParType>WindowWidget</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to window structure</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_WindowWidget *window)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>EventCallbackMovableWindow</Name>
        <Symbol>EventCallbackMovableWindow</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Callback used for movable window</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>1</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>false</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>false</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>3</ParamCount>
        <Parameter>
          <ParName>element</ParName>
          <ParType>Element</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to element</ParHint>
        </Parameter>
        <Parameter>
          <ParName>kind</ParName>
          <ParType>MsgKind</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>kind of event</ParHint>
        </Parameter>
        <Parameter>
          <ParName>pData</ParName>
          <ParType>Pvoid</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>optional data pointer, NULL otherwise</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_Element *element, %'ModuleName'_MsgKind kind, %'ModuleName'_Pvoid pData)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SetBackgroundColor</Name>
        <Symbol>SetBackgroundColor</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Changes the window background color.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>window</ParName>
          <ParType>Window</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to window widget</ParHint>
        </Parameter>
        <Parameter>
          <ParName>color</ParName>
          <ParType>PixelColor</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Background color for window</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_Window *window, %'ModuleName'_PixelColor color)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>MsgHandler</Name>
        <Symbol>MsgHandler</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Callback used for widget events</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>false</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>3</ParamCount>
        <Parameter>
          <ParName>kind</ParName>
          <ParType>MsgKind</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>kind of event</ParHint>
        </Parameter>
        <Parameter>
          <ParName>element</ParName>
          <ParType>Element</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to element</ParHint>
        </Parameter>
        <Parameter>
          <ParName>pData</ParName>
          <ParType>Pvoid</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>optional data pointer, NULL otherwise</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_MsgKind kind, %'ModuleName'_Element *element, %'ModuleName'_Pvoid pData)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SetUserMsgHandler</Name>
        <Symbol>SetUserMsgHandler</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Assigns a user callback to the widget</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>1</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>false</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>window</ParName>
          <ParType>WindowWidget</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to window</ParHint>
        </Parameter>
        <Parameter>
          <ParName>handler</ParName>
          <ParType>8bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>callback function pointer</ParHint>
          <ParUserDeclaration>%@UI@'ModuleName'%.MsgHandler handler</ParUserDeclaration>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_WindowWidget *window, %@UI@'ModuleName'%.MsgHandler handler)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <Links>
    <EmptySection_DummyValue/>
  </Links>
  <Revisions>
    <RevisionVersion>2</RevisionVersion>
  </Revisions>
</Bean>
