<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>SWI2C</Name>
  <Description>Interface "PCA9554\SWI2C" for component PCA9554, generated by Component Wizard</Description>
  <Author>Erich Styger</Author>
  <Version>01.003</Version>
  <FileVersion>2</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>SendChar</Name>
        <Symbol>SendChar</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>When working as a MASTER, this method writes 7 bits of slave address plus R/W bit = 0 to the I2C bus and then writes one character (byte) to the bus. The slave address must be specified before by the "SelectSlave" method or in the  component initialization section of 'Slave address ini' property. When working as the SLAVE, this method writes one character (byte) to the bus. If the ERR_NOTAVAIL error code returned, the char is successfully sent to master but the master device responds by an acknowledgement instead of no acknowledgement at the end of transfer. 'OnError' event is called in this case.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\nERR_OK - OK\nERR_SPEED - This device does not work in the active speed mode\nERR_BUSY - The slave device is busy, it does not respond by the acknowledgement  (MASTER mode only)\nERR_NOTAVAIL - The master device sends acknowledgement instead of no acknowledgement after the last byte transfer (SLAVE mode only)\nERR_DISABLED - Device is disabled\nERR_BUSOFF - Clock timeout elapsed (SLAVE mode only)</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>Chr</ParName>
          <ParType>8bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Character to send</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(byte Chr)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>RecvChar</Name>
        <Symbol>RecvChar</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>When working as a MASTER, this method writes 7 bits of slave address plus R/W bit = 1 to the I2C bus and then reads one character (byte) from the bus. The slave address must be specified before by the "SelectSlave" method or in the component initialization section of 'Slave address init'' property. When working as a SLAVE, this method reads one character (byte) from the bus.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\nERR_OK - OK\nERR_SPEED - This device does not work in the active speed mode\nERR_BUSY - The slave device is busy, it does not respond by the acknowledgement (MASTER mode only)\nERR_DISABLED - Device is disabled\nERR_BUSOFF - Clock timeout elapsed (SLAVE mode only)</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>Chr</ParName>
          <ParType>8bit unsigned</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to received character</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(byte *Chr)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SendBlock</Name>
        <Symbol>SendBlock</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>When working as a MASTER, this method writes 7 bits of slave address plus R/W bit = 0 to the I2C bus and then writes the block of characters to the bus. If the component is disabled (by the "Disable" method or initialization), the block is moved to the output buffer if the 'Output buffer size' property is different from zero. The content of the output buffer is sent immediately with the stop condition at the end when the component is enabled by the "Enable" method. After the output buffer transmission, the whole output buffer is cleared. The slave address must be specified before by the "SelectSlave" method or in component initialization section of 'Slave address init' property.  When working as a SLAVE, this method writes block of characters to the bus. If the ERR_NOTAVAIL error code is returned, the whole block is successfully sent to a master but the master device responds by an acknowledgment instead of no acknowledgment sent at the end of the last block byte transfer. 'OnError' event is called in this case.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\nERR_OK - OK\nERR_SPEED - This device does not work in the active speed mode\nERR_BUSY - The slave device is busy, it does not respond by the acknowledgement (MASTER mode only)\nERR_TXFULL - Output buffer is full (MASTER mode only)\nERR_NOTAVAIL - The master device sends acknowledgement instead of no acknowledgement after the last byte transfer (SLAVE mode only)\nERR_DISABLED - Device is disabled\nERR_BUSOFF - Clock timeout elapsed (SLAVE mode only)</RetHint>
        <ParamCount>3</ParamCount>
        <Parameter>
          <ParName>Ptr</ParName>
          <ParType>pointer</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>A pointer to the block of data to send</ParHint>
          <ParUserDeclaration>void *Ptr</ParUserDeclaration>
        </Parameter>
        <Parameter>
          <ParName>Siz</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>The size of the block</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Snt</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>A pointer to the number of data that are sent (copied to buffer)</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(void *Ptr, word Siz, word *Snt)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>RecvBlock</Name>
        <Symbol>RecvBlock</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>When working as a MASTER, this method writes 7 bits of slave address plus R/W bit = 1 to the I2C bus and then reads the block of characters from the bus. The slave address must be specified before by the "SelectSlave" method or in component initialization section of 'Slave address init' property.  When working as a SLAVE, this method reads the block of characters from the bus.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\nERR_OK - OK\nERR_SPEED - This device does not work in the active speed mode\nERR_BUSY - The slave device is busy, it does not respond by the acknowledgement (MASTER mode only)\nERR_DISABLED - Device is disabled\nERR_BUSOFF - Clock timeout elapsed (SLAVE mode only)</RetHint>
        <ParamCount>3</ParamCount>
        <Parameter>
          <ParName>Ptr</ParName>
          <ParType>pointer</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>A pointer to the block space for received data</ParHint>
          <ParUserDeclaration>void *Ptr</ParUserDeclaration>
        </Parameter>
        <Parameter>
          <ParName>Siz</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>The size of the block</ParHint>
        </Parameter>
        <Parameter>
          <ParName>Rcv</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>A pointer to the number of actually received data</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(void *Ptr, word Siz, word *Rcv)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SendStop</Name>
        <Symbol>SendStop</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>When working as a MASTER, if the 'Automatic stop condition' property value is 'no', this method sends a valid stop  condition to the serial data line of the I2C bus to terminate the communication on the bus after using send methods. This method is enabled only if the component is in MASTER mode and 'Automatic stop condition' property value is 'no'</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\nERR_OK - OK\nERR_SPEED - This device does not work in the active speed mode\nERR_DISABLED - Device is disabled</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SelectSlave</Name>
        <Symbol>SelectSlave</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>When working as a MASTER, this method selects a new slave for communication by its slave address value. Any send or receive method are directed to or from the selected device, until a new slave device is selected by this method. If the selected slave uses 10-bit slave addressing, as the parameter 7 bits must be passed, which involves 10-bit addressing (11110XX), including two MSBs of slave address (XX). The second byte of the 10-bit slave address must be sent to the slave as a general character of send methods. This method is available only if the component is in MASTER mode.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\nERR_OK - OK\nERR_SPEED - This device does not work in the active speed mode\nERR_DISABLED -  Device is disabled</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>Slv</ParName>
          <ParType>8bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Slave address value</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(byte Slv)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <EmptySection_DummyValue/>
  </EventList>
  <Registration>
    <Template>GenericSWI2C</Template>
    <Template>InternalI2C</Template>
  </Registration>
  <UserTypes>
    <EmptySection_DummyValue/>
  </UserTypes>
</Interface>
