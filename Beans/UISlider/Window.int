<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>Window</Name>
  <Description>Interface "UIButton\Window" for component UIButton, generated by Component Wizard</Description>
  <Author>Author</Author>
  <Version>01.002</Version>
  <FileVersion>2</FileVersion>
  <MethodList>
    <EmptySection_DummyValue/>
  </MethodList>
  <EventList>
    <EmptySection_DummyValue/>
  </EventList>
  <Registration>
    <Template>UIWindow</Template>
  </Registration>
  <UserTypes>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>Screen</Name>
      <Hint>Alias to screen type</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Alias to screen type */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>Window</Name>
      <Hint>Alias to Window element.</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Alias to Window element. */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>Element</Name>
      <Hint>Alias to Element</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Alias to Element */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>EventCallbackKind</Name>
      <Hint>different kinds of window event call back</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* different kinds of window event call back */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>PixelDim</Name>
      <Hint>Size of a pixel</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Size of a pixel */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>Pvoid</Name>
      <Hint>Pointer to void</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Pointer to void */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>PixelColor</Name>
      <Hint>type large enough to hold the color information</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>typedef %@Display@'ModuleName'%.Color %'ModuleName'%.PixelColor; /* type large enough to hold the color information */\n
</PreparedHint>
      <Type>typedef %@Display@'ModuleName'%.Color %'ModuleName'%.PixelColor;</Type>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>FontCallbacks</Name>
      <Hint>Callback to retrieve font information.</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>typedef %@UI@'ModuleName'%.FontCallbacks %'ModuleName'%.FontCallbacks; /* Callback to retrieve font information. */\n
</PreparedHint>
      <Type>typedef %@UI@'ModuleName'%.FontCallbacks %'ModuleName'%.FontCallbacks;</Type>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>painterCallback</Name>
      <Hint/>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>typedef byte (*%'ModuleName'%.painterCallback) (struct _UIWindow *window, struct _UIElement *element);\n
</PreparedHint>
      <Type>typedef byte (*%'ModuleName'%.painterCallback) (struct _UIWindow *window, struct _UIElement *element);</Type>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>WindowWidget</Name>
      <Hint>Alias to window element type</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Alias to window element type */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>ScreenWidget</Name>
      <Hint>Alias to screen widget type</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Alias to screen widget type */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>HeaderWidget</Name>
      <Hint/>
      <Generate>yes</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
  </UserTypes>
</Interface>
