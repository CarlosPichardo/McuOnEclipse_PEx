<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>Counter</Name>
  <Description>Interface CTouchSensor\Counter for bean CTouchSensor, generated by Bean Wizard</Description>
  <Author>Erich Styger</Author>
  <Version>01.001</Version>
  <FileVersion>2</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>Reset</Name>
        <Symbol>Reset</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>This method resets the timer-counter (sets to zero for up-counting HW or to appropriate value for down-counting HW). The method is available only if the counter register can be set by software and the counter is not shared.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>true</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\n     ERR_OK - OK\n     ERR_SPEED - This device does not work in the active speed mode</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetCounterValue</Name>
        <Symbol>GetCounterValue</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>This method returns a content of the counter.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\n     ERR_OK - OK\n     ERR_SPEED - This device does not work in the active speed mode</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>Value</ParName>
          <ParType>TTimerValue</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to returned value.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(%'ModuleName'_TTimerValue *Value)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <EmptySection_DummyValue/>
  </EventList>
  <Registration>
    <Template>Counter</Template>
  </Registration>
  <UserTypes>
    <Type>
      <UsrType>TRetypeType</UsrType>
      <Name>TTimerValue</Name>
      <Hint>Counter or compare value, width depends on timer width, 8, 16, 32 or 64 bits.</Hint>
      <Generate>yes</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>yes</GenerateHelp>
      <PreparedHint>  typedef dlong %'ModuleName'_TTimerValue ;/* Counter or compare value, width depends on timer width, 8, 16, 32 or 64 bits. */\n
</PreparedHint>
      <Type>64bit unsigned</Type>
    </Type>
  </UserTypes>
</Interface>
