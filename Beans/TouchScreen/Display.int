<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>Display</Name>
  <Description>Description</Description>
  <Author>Author</Author>
  <Version>01.003</Version>
  <FileVersion>2</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>DrawFilledBox</Name>
        <Symbol>DrawFilledBox</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Draws a rectangle box (filled)</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>5</ParamCount>
        <Parameter>
          <ParName>x</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>x left upper coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>y</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>y left upper coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>width</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Width in pixels</ParHint>
        </Parameter>
        <Parameter>
          <ParName>height</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Height in pixels</ParHint>
        </Parameter>
        <Parameter>
          <ParName>color</ParName>
          <ParType>PixelColor</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>color to be used to fill the box.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim width, %'ModuleName'_PixelDim height, %'ModuleName'_PixelColor color)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>DrawHLine</Name>
        <Symbol>DrawHLine</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Draws a horizontal line</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>4</ParamCount>
        <Parameter>
          <ParName>x</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>x left upper coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>y</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>y left upper coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>length</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Length of line in pixels</ParHint>
        </Parameter>
        <Parameter>
          <ParName>color</ParName>
          <ParType>PixelColor</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>color to be used to fill the box.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim length, %'ModuleName'_PixelColor color)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>DrawVLine</Name>
        <Symbol>DrawVLine</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Draws a vertical line</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>4</ParamCount>
        <Parameter>
          <ParName>x</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>x left upper coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>y</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>y left upper coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>length</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Length of line in pixels</ParHint>
        </Parameter>
        <Parameter>
          <ParName>color</ParName>
          <ParType>PixelColor</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>color to be used to fill the box.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim length, %'ModuleName'_PixelColor color)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetDisplayOrientation</Name>
        <Symbol>GetDisplayOrientation</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the current display orientation</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>DisplayOrientation</ReturnType>
        <RetHint>current display orientation</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_DisplayOrientation #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetWidth</Name>
        <Symbol>GetWidth</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the width of the display in pixels (in x direction)</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>pixel count</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetHeight</Name>
        <Symbol>GetHeight</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the height of the display in pixels (in y direction)</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>pixel count</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetLongerSide</Name>
        <Symbol>GetLongerSide</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the size of the longer side of the display</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetShorterSide</Name>
        <Symbol>GetShorterSide</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the size of the shorter side of the display</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <EmptySection_DummyValue/>
  </EventList>
  <Registration>
    <Template>GDisplay</Template>
  </Registration>
  <UserTypes>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>PixelColor</Name>
      <Hint>Display specific color type.</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>typedef %@Display@'ModuleName'%.Color %'ModuleName'%.Color; /* Display specific color type. */\n
</PreparedHint>
      <Type>typedef %@Display@'ModuleName'%.Color %'ModuleName'%.Color;</Type>
      <HWTestType>16bit signed</HWTestType>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>PixelDim</Name>
      <Hint>type for the pixel dimension. E.g. one byte if a pixel coordinate can be expressed in one byte.</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>typedef %@Display@'ModuleName'%.PixelDim %'ModuleName'%.PixelDim; /* type for the pixel dimension. E.g. one byte if a pixel coordinate can be expressed in one byte. */\n
</PreparedHint>
      <Type>typedef %@Display@'ModuleName'%.PixelDim %'ModuleName'%.PixelDim;</Type>
      <HWTestType>PixelDim</HWTestType>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>PixelCount</Name>
      <Hint>Type able to hold the number of pixels for the display.</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint>typedef %@Display@'ModuleName'%.PixelCount %'ModuleName'%.PixelCount; /* Type able to hold the number of pixels for the display. */\n
</PreparedHint>
      <Type>typedef %@Display@'ModuleName'%.PixelCount %'ModuleName'%.PixelCount;</Type>
      <HWTestType>16bit signed</HWTestType>
    </Type>
    <Type>
      <UsrType>TUserType</UsrType>
      <Name>DisplayOrientation</Name>
      <Hint>Specifies the orientation of the display</Hint>
      <Generate>no</Generate>
      <Unique>yes</Unique>
      <GenerateHelp>no</GenerateHelp>
      <PreparedHint> /* Specifies the orientation of the display */\n
</PreparedHint>
      <Type/>
      <HWTestType/>
    </Type>
  </UserTypes>
</Interface>
