<?xml version="1.0" encoding="UTF-8"?>
<Interface>
  <Name>InputCapture</Name>
  <Description>Interface QuadEncoder\InputCapture for bean QuadEncoder, generated by Bean Wizard</Description>
  <Author>Erich Styger</Author>
  <Version>01.005</Version>
  <FileVersion>2</FileVersion>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>Reset</Name>
        <Symbol>Reset</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>This method resets the external event counter (sets it to zero).</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>true</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\n     ERR_OK - OK</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetNumEvents</Name>
        <Symbol>GetNumEvents</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>This method returns the number of the external events.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>true</IsAssembler>
        <InDefinition>true</InDefinition>
        <Mode>meiAlwReq_!Exist</Mode>
        <ReturnType>8bit unsigned</ReturnType>
        <RetHint>Error code, possible codes:\n     ERR_OK - OK\n     ERR_OVERFLOW - Timer overflow</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>Value</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>A pointer to the returned number of the external events</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>byte #M#_#C#(word *Value)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <Event>
      <TEvntItem>
        <Name>OnEnd</Name>
        <Symbol>OnEnd</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>This event is called when the specified number of iterations is generated. This event is available only if a &lt;a href="UntitledProperties.html#IntService"&gt;interrupt service/event&lt;/a&gt; enabled, the bean is in &lt;a href="UntitledProperties.html#Mode"&gt;Repetitive mode&lt;/a&gt; and is enabled - &lt;a href="UntitledMethods.html#Enable"&gt;Enable&lt;/a&gt; and the events are enabled - &lt;a href="UntitledMethods.html#EnableEvent"&gt;EnableEvent&lt;/a&gt;.</Hint>
        <ItemLevel>ADVANCED</ItemLevel>
        <IsInSimulink>true</IsInSimulink>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description>generate code</Description>
        <Expanded>Yes</Expanded>
        <DefaultValue>true</DefaultValue>
        <DefineSymbol>DEF_UNDEF</DefineSymbol>
        <IfDisabled>setNOTHING</IfDisabled>
        <IsAssembler>true</IsAssembler>
        <Mode>meiAlwReq_!Exist</Mode>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #C#(void)</ANSIC>
        </Declarations>
        <Children>
          <GrupItem>
            <TEvntName>
              <Name>Event procedure name</Name>
              <Symbol>Name</Symbol>
              <Hint>OnEnd procedure name</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>true</EditLine>
              <DefaultValue/>
              <StrDefine>nothing</StrDefine>
              <MinLength>0</MinLength>
              <MaxLength>-1</MaxLength>
              <ErrorIfNotSet>true</ErrorIfNotSet>
              <IdentType>EVNT</IdentType>
            </TEvntName>
          </GrupItem>
          <GrupItem>
            <TPriorItem>
              <Name>Priority</Name>
              <Symbol>Priority</Symbol>
              <Hint>OnEnd priority</Hint>
              <ItemLevel>ADVANCED</ItemLevel>
              <EditLine>false</EditLine>
              <DefaultValue>same as interrupt</DefaultValue>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
              <SortStyle/>
            </TPriorItem>
          </GrupItem>
        </Children>
      </TEvntItem>
    </Event>
  </EventList>
  <Registration>
    <Template>InputCapture</Template>
  </Registration>
  <UserTypes>
    <EmptySection_DummyValue/>
  </UserTypes>
</Interface>
