%-Driver generated by the Component Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Component Wizard
%- If you change these lines, Component Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    11.05.2017
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\SDK_TimerSettings.Inc
%define! Abstract Common\SDK_TimerAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */
#include "%@sdk@ModuleName.h" /* SDK and API used */
#include "%'ModuleName'config.h" /* configuration */
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END

#if %@sdk@'ModuleName'%.CONFIG_SDK_VERSION_USED == %@sdk@'ModuleName'%.CONFIG_SDK_KINETIS_1_3
  #error "only SDK v2.x supported"
#endif
%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
%if defined(OnInterrupt)
void %OnInterrupt(void); /* event handler prototype */
%else
void %'ModuleName'%.OnInterrupt(void); /* event handler prototype */
%endif
%-
%-BW_CUSTOM_USERTYPE_END


%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
void %'ModuleName'%.%Init(void);
%include Common\SDK_TimerInit.Inc

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
void %'ModuleName'%.%Deinit(void);
%include Common\SDK_TimerDeinit.Inc

%endif %- Deinit
%-BW_METHOD_END Deinit
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetPeriodTicks
%ifdef SetPeriodTicks
void %'ModuleName'%.%SetPeriodTicks(uint32_t ticks);
%define! Particks
%include Common\SDK_TimerSetPeriodTicks.Inc

%endif %- SetPeriodTicks
%-BW_METHOD_END SetPeriodTicks
%-************************************************************************************************************
%-BW_METHOD_BEGIN Disable
%ifdef Disable
void %'ModuleName'%.%Disable(void);
%include Common\SDK_TimerDisable.Inc

%endif %- Disable
%-BW_METHOD_END Disable
%-************************************************************************************************************
%-BW_METHOD_BEGIN Enable
%ifdef Enable
void %'ModuleName'%.%Enable(void);
%include Common\SDK_TimerEnable.Inc

%endif %- Enable
%-BW_METHOD_END Enable
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetPeriodUS
%ifdef SetPeriodUS
void %'ModuleName'%.%SetPeriodUS(uint32_t us);
%define! Parus
%include Common\SDK_TimerSetPeriodUS.Inc

%endif %- SetPeriodUS
%-BW_METHOD_END SetPeriodUS
%-************************************************************************************************************
%-BW_METHOD_BEGIN EnableIRQ
%ifdef EnableIRQ
void %'ModuleName'%.%EnableIRQ(void);
%include Common\SDK_TimerEnableIRQ.Inc

%endif %- EnableIRQ
%-BW_METHOD_END EnableIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN DisableIRQ
%ifdef DisableIRQ
void %'ModuleName'%.%DisableIRQ(void);
%include Common\SDK_TimerDisableIRQ.Inc

%endif %- DisableIRQ
%-BW_METHOD_END DisableIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN EnableOverflowIRQ
%ifdef EnableOverflowIRQ
void %'ModuleName'%.%EnableOverflowIRQ(void);
%include Common\SDK_TimerEnableOverflowIRQ.Inc

%endif %- EnableOverflowIRQ
%-BW_METHOD_END EnableOverflowIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN DisableOverflowIRQ
%ifdef DisableOverflowIRQ
void %'ModuleName'%.%DisableOverflowIRQ(void);
%include Common\SDK_TimerDisableOverflowIRQ.Inc

%endif %- DisableOverflowIRQ
%-BW_METHOD_END DisableOverflowIRQ
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_METHOD_BEGIN OnInterrupt
%ifdef OnInterrupt
%INTERFACE OnInterrupt
void %OnInterrupt(void);
%include Common\SDK_TimerOnInterrupt.Inc

%endif %- OnInterrupt
%-BW_METHOD_END OnInterrupt
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\SDK_TimerSettings.Inc
%define! Abstract Common\SDK_TimerAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

#include "%'ModuleName'.h"

%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
#if %@sdk@'ModuleName'%.CONFIG_NXP_SDK_2_0_USED
  #include "fsl_common.h" /* common SDK header file */
  #include "fsl_clock.h" /* include SDK header file for clock configuration */
  #include "fsl_tpm.h" /* include SDK header file for timer module */
#elif %@sdk@'ModuleName'%.CONFIG_SDK_VERSION_USED == %@sdk@'ModuleName'%.CONFIG_SDK_KINETIS_1_3
  #error "SDK V1.x not supported"
#else
  #error "This component only works with the Kinetis SDK!"
#endif
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
#define %'ModuleName'%.SOURCE_CLOCK_FREQUENCY (CLOCK_GetFreq(kCLOCK_McgIrc48MClk)/4)
  /*!< Timer Clock Frequency */

void TPM2_IRQHandler(void) {
  /* Clear interrupt flag.*/
  TPM_ClearStatusFlags(%'ModuleName'%.CONFIG_TIMER_NAME, kTPM_TimeOverflowFlag);
%if defined(OnInterrupt)
  %OnInterrupt();
%endif
}
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetPeriodTicks
%ifdef SetPeriodTicks
%define! Particks
%include Common\SDK_TimerSetPeriodTicks.Inc
void %'ModuleName'%.%SetPeriodTicks(uint32_t ticks)
{
  TPM_SetTimerPeriod(%'ModuleName'%.CONFIG_TIMER_NAME, ticks);
}

%endif %- SetPeriodTicks
%-BW_METHOD_END SetPeriodTicks
%-************************************************************************************************************
%-BW_METHOD_BEGIN Disable
%ifdef Disable
%include Common\SDK_TimerDisable.Inc
void %'ModuleName'%.%Disable(void)
{
  TPM_StopTimer(%'ModuleName'%.CONFIG_TIMER_NAME);
}

%endif %- Disable
%-BW_METHOD_END Disable
%-************************************************************************************************************
%-BW_METHOD_BEGIN Enable
%ifdef Enable
%include Common\SDK_TimerEnable.Inc
void %'ModuleName'%.%Enable(void)
{
  TPM_StartTimer(%'ModuleName'%.CONFIG_TIMER_NAME, kTPM_SystemClock);
}

%endif %- Enable
%-BW_METHOD_END Enable
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetPeriodUS
%ifdef SetPeriodUS
%define! Parus
%include Common\SDK_TimerSetPeriodUS.Inc
void %'ModuleName'%.%SetPeriodUS(uint32_t us)
{
  %'ModuleName'%.%SetPeriodTicks(USEC_TO_COUNT(1000U, %'ModuleName'%.SOURCE_CLOCK_FREQUENCY));
}

%endif %- SetPeriodUS
%-BW_METHOD_END SetPeriodUS
%-************************************************************************************************************
%-BW_METHOD_BEGIN EnableIRQ
%ifdef EnableIRQ
%include Common\SDK_TimerEnableIRQ.Inc
void %'ModuleName'%.%EnableIRQ(void)
{
  EnableIRQ(%'ModuleName'%.CONFIG_TIMER_IRQ);
}

%endif %- EnableIRQ
%-BW_METHOD_END EnableIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN DisableIRQ
%ifdef DisableIRQ
%include Common\SDK_TimerDisableIRQ.Inc
void %'ModuleName'%.%DisableIRQ(void)
{
  DisableIRQ(%'ModuleName'%.CONFIG_TIMER_IRQ);
}

%endif %- DisableIRQ
%-BW_METHOD_END DisableIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN EnableOverflowIRQ
%ifdef EnableOverflowIRQ
%include Common\SDK_TimerEnableOverflowIRQ.Inc
void %'ModuleName'%.%EnableOverflowIRQ(void)
{
  TPM_EnableInterrupts(%'ModuleName'%.CONFIG_TIMER_NAME, kTPM_TimeOverflowInterruptEnable);
}

%endif %- EnableOverflowIRQ
%-BW_METHOD_END EnableOverflowIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN DisableOverflowIRQ
%ifdef DisableOverflowIRQ
%include Common\SDK_TimerDisableOverflowIRQ.Inc
void %'ModuleName'%.%DisableOverflowIRQ(void)
{
  TPM_DisableInterrupts(%'ModuleName'%.CONFIG_TIMER_NAME, kTPM_TimeOverflowInterruptEnable);
}

%endif %- DisableOverflowIRQ
%-BW_METHOD_END DisableOverflowIRQ
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
%include Common\SDK_TimerInit.Inc
void %'ModuleName'%.%Init(void)
{
  tpm_config_t tpmInfo;

  /* Select the clock source for the TPM counter as MCGPLLCLK */
  CLOCK_SetTpmClock(1U);

  TPM_GetDefaultConfig(&tpmInfo);
  /* TPM clock divide by 4 */
  tpmInfo.prescale = kTPM_Prescale_Divide_4;

  /* Initialize TPM module */
  TPM_Init(%'ModuleName'%.CONFIG_TIMER_NAME, &tpmInfo);

  %'ModuleName'%.%SetPeriodUs(1000); /* set initial period */
  %'ModuleName'%.%EnableOverflowIRQ(); /* enable tower overflow interrupt */
  %'ModuleName'%.%EnableIRQ(); /* enable timer interrupt */
  %'ModuleName'%.%Enable(); /* start timer */
}

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
%include Common\SDK_TimerDeinit.Inc
void %'ModuleName'%.%Deinit(void)
{
  /* If you see this comment in generated code, it means that method is not implemented yet ... */
}

%endif %- Deinit
%-BW_METHOD_END Deinit
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_METHOD_BEGIN OnInterrupt
%ifdef OnInterrupt
%IMPLEMENTATION OnInterrupt
%include Common\SDK_TimerOnInterrupt.Inc
void %OnInterrupt(void)
{
  /* Write your code here ... */
}

%endif %- OnInterrupt
%-BW_METHOD_END OnInterrupt
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
  /* Write code here ... */
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%else %- Language (& Compiler)
  %error^ This component is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
%-----------------------------------------------------------------------------------------
%if defined(sdk) & %@sdk@ConfigFilesFolderName <> ""
  %define  ConfigSrcDirFolder %%@sdk@ConfigFilesFolderName/
%else
  %define  ConfigSrcDirFolder
%endif
%----------------------------
%FILE %'DirRel_Code'%'ConfigSrcDirFolder'%'ModuleName'config.h
/**
 * \file
 * \brief Configuration header file for SDK_Timer
 *
 * This header file is used to configure settings of the SDK Timer module.
 */
#ifndef __%'ModuleName'_CONFIG_H
#define __%'ModuleName'_CONFIG_H

#ifndef %'ModuleName'%.CONFIG_TIMER_NAME
  #define %'ModuleName'%.CONFIG_TIMER_NAME       %TimerName
    /*!< name of TIMER, is pointer to TPM_Type */
#endif

#define %'ModuleName'%.CONFIG_TIMER_IRQ  %TimerName##_IRQn
/*TPM2_IRQn*/

#endif /* __%'ModuleName'_CONFIG_H */
%-----------------------------------------------------------------------------------------
