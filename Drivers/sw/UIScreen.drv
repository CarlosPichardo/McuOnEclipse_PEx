%-Driver generated by the Bean Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Bean Wizard
%- If you change these lines, Bean Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    25.09.2009
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\UIScreenSettings.Inc
%define! Abstract Common\UIScreenAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */
#include "%@sdk@ModuleName.h" /* SDK and API used */
#include "%'ModuleName'config.h" /* configuration */

/* Include inherited components */
#include "%@UI@ModuleName.h"

%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
/* --- Screen Widget --- */
typedef struct %'ModuleName'_ScreenWidget {
  %@UI@'ModuleName'%.Element element;                            %>40/* the base element, always first in structure */
  %@UI@'ModuleName'%.PixelColor bgColor;                         %>40/* background color of the screen */
#if %@UI@'ModuleName'%.CONFIG_SELECTION_ENABLED
  %@UI@'ModuleName'%.Element *selectedW;                         %>40/* pointer to the currently selected window */
#endif
} %'ModuleName'_ScreenWidget;
%-
%-BW_CUSTOM_USERTYPE_END

%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Create
%ifdef Create
uint8_t %'ModuleName'%.%Create(%@UI@'ModuleName'%.Element *parent, %'ModuleName'_ScreenWidget *screen, %@UI@'ModuleName'%.PixelDim x, %@UI@'ModuleName'%.PixelDim y, %@UI@'ModuleName'%.PixelDim width, %@UI@'ModuleName'%.PixelDim height);
%define! Parscreen
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parparent
%define! RetVal
%include Common\UIScreenCreate.Inc

%endif %- Create
%-BW_METHOD_END Create
%-************************************************************************************************************
%-BW_METHOD_BEGIN Paint
%ifdef Paint
void %'ModuleName'%.%Paint(%'ModuleName'_ScreenWidget *screen);
%define! Parscreen
%include Common\UIScreenPaint.Inc

%endif %- Paint
%-BW_METHOD_END Paint
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetBackgroundColor
%ifdef SetBackgroundColor
void %'ModuleName'%.%SetBackgroundColor(%'ModuleName'_ScreenWidget *screen, %@UI@'ModuleName'%.PixelColor color);
%define! Parscreen
%define! Parcolor
%include Common\UIScreenSetBackgroundColor.Inc

%endif %- SetBackgroundColor
%-BW_METHOD_END SetBackgroundColor
%-************************************************************************************************************
%-BW_METHOD_BEGIN MessageHandler
%ifdef MessageHandler
void %'ModuleName'%.%MessageHandler(%@UI@'ModuleName'%.Element *element, %@UI@'ModuleName'%.MsgKind kind, void *pData);
%define! Parkind
%define! Parelement
%define! ParpData
%include Common\UIScreenMessageHandler.Inc

%endif %- MessageHandler
%-BW_METHOD_END MessageHandler
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\UIScreenSettings.Inc
%define! Abstract Common\UIScreenAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
#include <string.h> /* for memcpy */
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Paint
%ifdef Paint
%define! Parscreen
%include Common\UIScreenPaint.Inc
void %'ModuleName'%.%Paint(%'ModuleName'_ScreenWidget *screen)
{
  %@UI@'ModuleName'%.DrawFilledBox(
    screen->element.parent,
    screen->element.prop.x,
    screen->element.prop.y,
    screen->element.prop.width,
    screen->element.prop.height,
    screen->bgColor
  );
}

%endif %- Paint
%-BW_METHOD_END Paint
%-************************************************************************************************************
%-BW_METHOD_BEGIN MessageHandler
%ifdef MessageHandler
%define! Parkind
%define! ParpData
%define! Parelement
%include Common\UIScreenMessageHandler.Inc
void %'ModuleName'%.%MessageHandler(%@UI@'ModuleName'%.Element *element, %@UI@'ModuleName'%.MsgKind kind, void *pData)
{
  (void)pData; /* unused argument */
  if (element==NULL || element->prop.type!=%@UI@'ModuleName'%.WIDGET_SCREEN) {
    return; /* not a screen */
  }
  switch(kind) {
    case %@UI@'ModuleName'%.MSG_WIDGET_PAINT:
      %'ModuleName'%.%Paint((%'ModuleName'_ScreenWidget*)element);
      break;
    default:
      break;
  } /* switch */
}
%endif %- MessageHandler
%-BW_METHOD_END MessageHandler
%-************************************************************************************************************
%-BW_METHOD_BEGIN Create
%ifdef Create
%define! Parscreen
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parparent
%define! RetVal
%include Common\UIScreenCreate.Inc
uint8_t %'ModuleName'%.%Create(%@UI@'ModuleName'%.Element *parent, %'ModuleName'_ScreenWidget *screen, %@UI@'ModuleName'%.PixelDim x, %@UI@'ModuleName'%.PixelDim y, %@UI@'ModuleName'%.PixelDim width, %@UI@'ModuleName'%.PixelDim height)
{
  if (screen==NULL) {
    return ERR_FAILED;
  }
  if (parent!=NULL) {
    x += %@UI@'ModuleName'%.GetElementPosX(parent);
    y += %@UI@'ModuleName'%.GetElementPosY(parent);
  }
  %@UI@'ModuleName'%.ElementInitCommon(
    (%@UI@'ModuleName'%.Element*)screen,
    %@UI@'ModuleName'%.WIDGET_SCREEN,
    x, x, width, height,
    %'ModuleName'%.%MessageHandler
  );
  screen->bgColor = %'ModuleName'_CONFIG_DEFAULT_SCREEN_BACKGROUND_COLOR;
#if %@UI@'ModuleName'%.CONFIG_SELECTION_ENABLED
  screen->selectedW = NULL;
#endif
  if (parent!=NULL) {
    return %@UI@'ModuleName'%.AddSubElement(parent, &screen->element);
  }
  return ERR_OK;
}

%endif %- Create
%-BW_METHOD_END Create
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetBackgroundColor
%ifdef SetBackgroundColor
%define! Parscreen
%define! Parcolor
%include Common\UIScreenSetBackgroundColor.Inc
void %'ModuleName'%.%SetBackgroundColor(%'ModuleName'_ScreenWidget *screen, %@UI@'ModuleName'%.PixelColor color)
{
  screen->bgColor = color;
}

%endif %- SetBackgroundColor
%-BW_METHOD_END SetBackgroundColor
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%-----------------------------------------------------------------------------------------
%if defined(sdk) & %@sdk@ConfigFilesFolderName <> ""
  %define  ConfigSrcDirFolder %%@sdk@ConfigFilesFolderName/
%else
  %define  ConfigSrcDirFolder
%endif
%----------------------------
%FILE %'DirRel_Code'%'ConfigSrcDirFolder'%'ModuleName'config.h
/**
 * \file
 * \brief Application configuration file for UIScreen module
 *
 * This header file is a configuration header file to configure the module %'ModuleName' (UIScreen).
 * You can configure the defines directly in this file or with the compiler -D option.
 */

#ifndef __%'ModuleName'_CONFIG_H
#define __%'ModuleName'_CONFIG_H

#ifndef %'ModuleName'%.CONFIG_DEFAULT_SCREEN_BACKGROUND_COLOR
  #define %'ModuleName'%.CONFIG_DEFAULT_SCREEN_BACKGROUND_COLOR  %@UI@'ModuleName'%.COLOR_%BackgroundColor
    /*!< Default screen background color */
#endif

#endif /* __%'ModuleName'_CONFIG_H */
%-----------------------------------------------------------------------------------------
%else %- Language (& Compiler)
  %error^ This bean is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
