%-Driver generated by the Bean Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Bean Wizard
%- If you change these lines, Bean Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    25.09.2009
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\UIHeaderSettings.Inc
%define! Abstract Common\UIHeaderAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */
#include "%@sdk@ModuleName.h" /* SDK and API used */
#include "%'ModuleName'config.h" /* configuration */

/* Include inherited components */
#include "%@UI@ModuleName.h"
#include "%@Icon@ModuleName.h"
#include "%@TextWidget@ModuleName.h"

%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
typedef struct {
  %@UI@'ModuleName'%.Element element;                            %>40/* the base element, always first in structure */
  %@UI@'ModuleName'%.PixelColor bgColor;                         %>40/* background color */
#if %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER
  %@UI@'ModuleName'%.MsgHandler userMsgHandler;                  %>40/* optional user handler */
#endif
  %@TextWidget@'ModuleName'%.TextWidget textWidget;              %>40/* text widget describing the text */
  %@Icon@'ModuleName'%.IconWidget iconWidget;                    %>40/* icon widget  */
} %'ModuleName'_HeaderWidget;

typedef enum {                                                   %>40/* this lists widget specific event kinds */
  %'ModuleName'_MSG_HEADER_CLOSE = %@UI@'ModuleName'%.MSG_LAST_PREFINED%>40/* Close icon in header has been pressed */
} %'ModuleName'_HeaderMsgKind; /* extension of %@UI@'ModuleName'%.MsgKind */
%-
%-BW_CUSTOM_USERTYPE_END
%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Create
%ifdef Create
uint8_t %'ModuleName'%.%Create(%@UI@'ModuleName'%.Element *parent, %'ModuleName'_HeaderWidget *header, %@UI@'ModuleName'%.PixelDim x, %@UI@'ModuleName'%.PixelDim y, %@UI@'ModuleName'%.PixelDim width, %@UI@'ModuleName'%.PixelDim height);
%define! Parheader
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parparent
%define! RetVal
%include Common\UIHeaderCreate.Inc

%endif %- Create
%-BW_METHOD_END Create
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetBackgroundColor
%ifdef SetBackgroundColor
void %'ModuleName'%.%SetBackgroundColor(%'ModuleName'_HeaderWidget *header, %@UI@'ModuleName'%.PixelColor color);
%define! Parcolor
%define! Parheader
%include Common\UIHeaderSetBackgroundColor.Inc

%endif %- SetBackgroundColor
%-BW_METHOD_END SetBackgroundColor
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetUserMsgHandler
%ifdef SetUserMsgHandler
void %'ModuleName'%.%SetUserMsgHandler(%'ModuleName'_HeaderWidget *widget, %@UI@'ModuleName'%.MsgHandler handler);
%define! Parwidget
%define! Parhandler
%include Common\UIHeaderSetUserMsgHandler.Inc

%endif %- SetUserMsgHandler
%-BW_METHOD_END SetUserMsgHandler
%-************************************************************************************************************
%-BW_METHOD_BEGIN Resize
%ifdef Resize
uint8_t %'ModuleName'%.%Resize(%'ModuleName'_HeaderWidget *widget);
%define! Parwidget
%define! RetVal
%include Common\UIHeaderResize.Inc

%endif %- Resize
%-BW_METHOD_END Resize
%-************************************************************************************************************
%-BW_METHOD_BEGIN ResizeIcon
%ifdef ResizeIcon
uint8_t %'ModuleName'%.%ResizeIcon(%'ModuleName'_HeaderWidget *widget);
%define! Parwidget
%define! RetVal
%include Common\UIHeaderResizeIcon.Inc

%endif %- ResizeIcon
%-BW_METHOD_END ResizeIcon
%-************************************************************************************************************
%-BW_METHOD_BEGIN Paint
%ifdef Paint
void %'ModuleName'%.%Paint(%'ModuleName'_HeaderWidget *header);
%define! Parheader
%include Common\UIHeaderPaint.Inc

%endif %- Paint
%-BW_METHOD_END Paint
%-************************************************************************************************************
%-BW_METHOD_BEGIN MessageHandler
%ifdef MessageHandler
void %'ModuleName'%.%MessageHandler(%@UI@'ModuleName'%.Element *element, %@UI@'ModuleName'%.MsgKind kind, void *pData);
%define! Parelement
%define! Parkind
%define! ParpData
%include Common\UIHeaderMessageHandler.Inc

%endif %- MessageHandler
%-BW_METHOD_END MessageHandler
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetForegroundColor
%ifdef SetForegroundColor
void %'ModuleName'%.%SetForegroundColor(%'ModuleName'_HeaderWidget *header, %@UI@'ModuleName'%.PixelColor color);
%define! Parheader
%define! Parcolor
%include Common\UIHeaderSetForegroundColor.Inc

%endif %- SetForegroundColor
%-BW_METHOD_END SetForegroundColor
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetText
%ifdef SetText
void %'ModuleName'%.%SetText(%'ModuleName'_HeaderWidget *header, uint8_t *text);
%define! Parheader
%define! Partext
%include Common\UIHeaderSetText.Inc

%endif %- SetText
%-BW_METHOD_END SetText
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\UIHeaderSettings.Inc
%define! Abstract Common\UIHeaderAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Paint
%ifdef Paint
%define! Parheader
%include Common\UIHeaderPaint.Inc
void %'ModuleName'%.%Paint(%'ModuleName'_HeaderWidget *header)
{
  if (header->element.prop.type != %@UI@'ModuleName'%.WIDGET_HEADER) {
    return;
  }
  %@UI@'ModuleName'%.DrawFilledBox(&header->element,
    header->element.prop.x, header->element.prop.y,
    header->element.prop.width, header->element.prop.height,
    header->bgColor);
}

%endif %- Paint
%-BW_METHOD_END Paint
%-************************************************************************************************************
%-BW_METHOD_BEGIN MessageHandler
%ifdef MessageHandler
%define! Parkind
%define! ParpData
%define! Parelement
%include Common\UIHeaderMessageHandler.Inc
void %'ModuleName'%.%MessageHandler(%@UI@'ModuleName'%.Element *element, %@UI@'ModuleName'%.MsgKind kind, void *pData)
{
  %'ModuleName'_HeaderWidget *widget = (%'ModuleName'_HeaderWidget*)element;

  if (widget==NULL || widget->element.prop.type!=%@UI@'ModuleName'%.WIDGET_HEADER) {
    return; /* not a text widget */
  }
  switch(kind) {
    case %@UI@'ModuleName'%.MSG_WIDGET_SELECTED:
    case %@UI@'ModuleName'%.MSG_WIDGET_UPDATE:
    case %@UI@'ModuleName'%.MSG_WIDGET_PAINT:
      %'ModuleName'%.%Paint(widget);
      break;
    case %@UI@'ModuleName'%.MSG_WIDGET_RESIZE:
     (void)%@TextWidget@'ModuleName'%.Resize(&widget->textWidget); /* first resize header text item */
     (void)%'ModuleName'%.Resize(widget); /* resize widget itself */
     (void)%'ModuleName'%.%ResizeIcon(widget); /* resize and position icon */
      break;
    case %@UI@'ModuleName'%.MSG_CLICK_RELEASE:
      if (%@UI@'ModuleName'%.CoordinateInsideElement((%@UI@'ModuleName'%.Coordinate*)pData, &widget->iconWidget.element)) { /* inside close icon? */
  #if %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER
        if (widget->userMsgHandler != NULL){
          widget->userMsgHandler(element, (%@UI@'ModuleName'%.MsgKind)%'ModuleName'_MSG_HEADER_CLOSE, pData);%>40/* call user event for header  */
        }
  #endif
      }
      break;
    default:
      break;
  } /* switch */
#if %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER
  if (widget->userMsgHandler != NULL) {
    widget->userMsgHandler(element, kind, pData);                %>40/* call user event  */
  }
#else
  (void)pData; /* avoid warning about unused argument */
#endif
}

%endif %- MessageHandler
%-BW_METHOD_END MessageHandler
%-************************************************************************************************************
%-BW_METHOD_BEGIN ResizeIcon
%ifdef ResizeIcon
%define! Parwidget
%define! RetVal
%include Common\UIHeaderResizeIcon.Inc
uint8_t %'ModuleName'%.%ResizeIcon(%'ModuleName'_HeaderWidget *widget)
{
  %@UI@'ModuleName'%.PixelDim iconSize, iconPosX, iconPosY;

  if (widget==NULL) {
    return ERR_FAILED;
  }
  if (widget->element.prop.height>2*%'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE) {
    iconSize = widget->element.prop.height-2*%'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE;
  } else {
    iconSize = 0;
  }
  if (widget->element.prop.width>%'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE-iconSize) {
    iconPosX = widget->element.prop.width-%'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE-iconSize;
  } else {
    iconPosX = 0;
  }
  iconPosY = %'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE;
  widget->iconWidget.element.prop.x = iconPosX;
  widget->iconWidget.element.prop.y = iconPosY;
  widget->iconWidget.element.prop.width = iconSize;
  widget->iconWidget.element.prop.height = iconSize;
  return ERR_OK;
}

%endif %- ResizeIcon
%-BW_METHOD_END ResizeIcon
%-************************************************************************************************************
%-BW_METHOD_BEGIN Create
%ifdef Create
%define! Parheader
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parparent
%define! RetVal
%include Common\UIHeaderCreate.Inc
uint8_t %'ModuleName'%.%Create(%@UI@'ModuleName'%.Element *parent, %'ModuleName'_HeaderWidget *header, %@UI@'ModuleName'%.PixelDim x, %@UI@'ModuleName'%.PixelDim y, %@UI@'ModuleName'%.PixelDim width, %@UI@'ModuleName'%.PixelDim height)
{
  if (header==NULL) {
    return ERR_FAILED;
  }
  if (parent!=NULL) {
    if (width==0) { /* autosize to parent width */
      width = %@UI@'ModuleName'%.GetElementWidth(parent);
    }
    if (height==0) { /* autosize to parent height */
      height = %@UI@'ModuleName'%.GetElementHeight(parent);
    }
  }
  %@UI@'ModuleName'%.ElementInitCommon(&header->element, %@UI@'ModuleName'%.WIDGET_HEADER,
    x, y, width, height,
    %'ModuleName'%.%MessageHandler);
  header->bgColor = %'ModuleName'_CONFIG_HEADER_DEFAULT_BACKGROUND_COLOR;
#if %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER
  header->userMsgHandler = NULL;                                 %>40/* optional user handler */
#endif

  /* create a textWidget for header text */
  if (%@TextWidget@'ModuleName'%.Create(&header->element, &header->textWidget,
      %'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE, %'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE, 0, 0)!=ERR_OK
    )
  {
    return ERR_FAILED;
  }
  %'ModuleName'%.%SetText(header, (unsigned char *)%'ModuleName'_CONFIG_HEADER_DEFAULT_TEXT);
  /* resize header: adjust for text height and border size */
  if (%'ModuleName'%.%Resize(header)!=ERR_OK) {
    return ERR_FAILED;
  }

  /* create icon widget with dummy values. The following resize will set them correctly. */
  if (%@Icon@'ModuleName'%.Create(&header->element, &header->iconWidget,
      header->element.prop.width-5, %'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE,
      5, 5
    )!=ERR_OK)
  {
    return ERR_FAILED;
  }
  %@Icon@'ModuleName'%.SetType(&header->iconWidget, %@Icon@'ModuleName'%.ICON_X_BOXED);

  /* resize icon, have it placed to the right */
  if (%'ModuleName'%.%ResizeIcon(header)!=ERR_OK) {
    return ERR_FAILED;
  }
  /* set text widget default foreground color */
  %'ModuleName'%.%SetForegroundColor(header, %'ModuleName'_CONFIG_HEADER_DEFAULT_FOREGROUND_COLOR);
  /* set background color for header, text and icon */
  %'ModuleName'%.%SetBackgroundColor(header, %'ModuleName'_CONFIG_HEADER_DEFAULT_BACKGROUND_COLOR);
  /* add the header widget to the list in the parent */
  if (%@UI@'ModuleName'%.AddSubElement(parent, &header->element) != ERR_OK) {
    return ERR_FAILED;
  }
}

%endif %- Create
%-BW_METHOD_END Create
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetBackgroundColor
%ifdef SetBackgroundColor
%define! Parcolor
%define! Parheader
%include Common\UIHeaderSetBackgroundColor.Inc
void %'ModuleName'%.%SetBackgroundColor(%'ModuleName'_HeaderWidget *header, %@UI@'ModuleName'%.PixelColor color)
{
  /* header widget background */
  header->bgColor = color;
  /* set color of text widget */
  %@TextWidget@'ModuleName'%.SetBackgroundColor(&header->textWidget, color);
  /* set color of icon widget */
  %@Icon@'ModuleName'%.SetBackgroundColor(&header->iconWidget, color);
  %@Icon@'ModuleName'%.SetInsideColor(&header->iconWidget, color);
}

%endif %- SetBackgroundColor
%-BW_METHOD_END SetBackgroundColor
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetForegroundColor
%ifdef SetForegroundColor
%define! Parheader
%define! Parcolor
%include Common\UIHeaderSetForegroundColor.Inc
void %'ModuleName'%.%SetForegroundColor(%'ModuleName'_HeaderWidget *header, %@UI@'ModuleName'%.PixelColor color)
{
  %@TextWidget@'ModuleName'%.SetForegroundColor(&header->textWidget, color);
  %@Icon@'ModuleName'%.SetForegroundColor(&header->iconWidget, color);
}

%endif %- SetForegroundColor
%-BW_METHOD_END SetForegroundColor
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetText
%ifdef SetText
%define! Parheader
%define! Partext
%include Common\UIHeaderSetText.Inc
void %'ModuleName'%.%SetText(%'ModuleName'_HeaderWidget *header, uint8_t *text)
{
  (void)%@TextWidget@'ModuleName'%.SetText(&header->textWidget, text); /* set new text */
}

%endif %- SetText
%-BW_METHOD_END SetText
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetUserMsgHandler
%ifdef SetUserMsgHandler
%define! Parwidget
%define! Parhandler
%include Common\UIHeaderSetUserMsgHandler.Inc
void %'ModuleName'%.%SetUserMsgHandler(%'ModuleName'_HeaderWidget *widget, %@UI@'ModuleName'%.MsgHandler handler)
{
#if %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER
  widget->userMsgHandler = handler;
#else
  (void)window;
  (void)handler;
#endif
}

%endif %- SetUserMsgHandler
%-BW_METHOD_END SetUserMsgHandler
%-************************************************************************************************************
%-BW_METHOD_BEGIN Resize
%ifdef Resize
%define! Parwidget
%define! RetVal
%include Common\UIHeaderResize.Inc
uint8_t %'ModuleName'%.%Resize(%'ModuleName'_HeaderWidget *widget)
{
  if (widget==NULL) {
    return ERR_FAILED;
  }
  widget->element.prop.height = widget->textWidget.element.prop.height+2*%'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE;
  if (widget->element.parent!=NULL) {
    widget->element.prop.width = widget->element.parent->prop.width;
  }
  return ERR_OK;
}

%endif %- Resize
%-BW_METHOD_END Resize
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%-----------------------------------------------------------------------------------------
%if defined(sdk) & %@sdk@ConfigFilesFolderName <> ""
  %define  ConfigSrcDirFolder %%@sdk@ConfigFilesFolderName/
%else
  %define  ConfigSrcDirFolder
%endif
%----------------------------
%FILE %'DirRel_Code'%'ConfigSrcDirFolder'%'ModuleName'config.h
/**
 * \file
 * \brief Application configuration file for UIWindow module
 *
 * This header file is a configuration header file to configure the module %'ModuleName' (UIWindow).
 * You can configure the defines directly in this file or with the compiler -D option.
 */

#ifndef __%'ModuleName'_CONFIG_H
#define __%'ModuleName'_CONFIG_H

#ifndef %'ModuleName'_CONFIG_HEADER_DEFAULT_TEXT
  #define %'ModuleName'_CONFIG_HEADER_DEFAULT_TEXT                "%defaultText"
  /*!< Default header text */
#endif

#ifndef %'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE
  #define %'ModuleName'_CONFIG_HEADER_DEFAULT_BORDER_SIZE         %HeaderBorderSize
    /*!< space inside header in pixels */
#endif

#ifndef %'ModuleName'_CONFIG_HEADER_DEFAULT_FOREGROUND_COLOR
  #define %'ModuleName'_CONFIG_HEADER_DEFAULT_FOREGROUND_COLOR    %@UI@'ModuleName'%.COLOR_%DefaultHeaderForegroundColor
    /*!< default header foreground color */
#endif

#ifndef %'ModuleName'_CONFIG_HEADER_DEFAULT_BACKGROUND_COLOR
  #define %'ModuleName'_CONFIG_HEADER_DEFAULT_BACKGROUND_COLOR    %@UI@'ModuleName'%.COLOR_%DefaultHeaderBackgroundColor
    /*!< default header background color */
#endif

#ifndef %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER
%ifdef SetUserMsgHandler
  #define %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER  (1)
    /*!< 1: windows have extra user message handler; 0: no extra message handler*/
%else
  #define %'ModuleName'%.CONFIG_HEADER_HAS_USER_MSG_HANDLER  (0)
    /*!< 1: windows have extra user message handler; 0: no extra message handler*/
%endif
#endif

#endif /* __%'ModuleName'_CONFIG_H */
%-----------------------------------------------------------------------------------------
%else %- Language (& Compiler)
  %error^ This bean is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
